# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  # https://circleci.com/developer/orbs/orb/circleci/aws-ecr
  aws-ecr: circleci/aws-ecr@7.2.0

workflows:
  test_and_deploy:
    jobs:
      - check
      # - format_test
      # - build_and_push_docker_image:
      #     requires:
      #       - format_test
      #     matrix:
      #       parameters:
      #         applicationName: ['properties']

jobs:
  check:
    docker:
      - image: cimg/node:16.7.0
    steps:
      - run: |
          echo << parameters >>
  format_test:
    docker:
      - image: cimg/node:16.7.0
    steps:
      - checkout
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
              circleci-agent step halt
          fi
      - restore_cache:
          name: Restore Cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install dependencies
          command: npm i
      - save_cache:
          name: Save Cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
      - run:
          name: Format Code
          command: npm run format:check -- --base=master --head=${CIRCLE_BRANCH} --parallel
      - run:
          name: Lint Code
          command: npm run affected:lint -- --base=master --head=${CIRCLE_BRANCH} --parallel
      - run:
          name: Run Tests
          command: npm run affected:test -- --base=master --head=${CIRCLE_BRANCH} --code-coverage --parallel
          parallelism: 4
      - run:
          name: Build affected apps
          command: npm run affected:build -- --base=master --head=${CIRCLE_BRANCH}
      - persist_to_workspace:
          root: .
          paths:
            - .
  build_and_push_docker_image:
    parameters:
      applicationName:
        type: string
    docker:
      - image: cimg/node:16.7.0
    steps:
      # Envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, AWS_ECR_ACCOUNT_URL
      - aws-ecr/build-and-push-image:
          repo: qa
          tag: 'latest,v0.1.${CIRCLE_BUILD_NUM}'
          path: .
          extra-build-args: << parameters.applicationName >>
          attach-workspace: true
          workspace-root: .
