# This config is equivalent to both the '.circleci/extended/orb-free.yml' and the base '.circleci/config.yml'
version: 2.1

orbs:
  node: circleci/node@4.7.0
  aws-ecr: circleci/aws-ecr@7.2.0

defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/node:16.10.0

deploy_cache: &deploy_cache
  key: last-deploy-sha

npm_cache: &npm_cache
  keys:
    - dependency-cache-{{ checksum "package-lock.json" }}
    # fallback to using the latest cache if no exact match is found
    - dependency-cache-

npm_install: &npm_install
  name: Install Dependencies
  command: npm install

workflows:
  build_and_deploy:
    jobs:
      - install
      - format_and_test:
          requires:
            - install
      - build_affected_apps:
          requires:
            - install
      - aws-ecr/build-and-push-image:
          requires:
            - build_affected_apps
            - format_and_test
          repo: qa
          tag: 'latest,properties.0.1.${CIRCLE_BUILD_NUM}'
          dockerfile: ./deployments/nextjs/Dockerfile
          path: .
          extra-build-args: --build-arg applicationName=properties
          attach-workspace: true
          workspace-root: .

jobs:
  install:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *npm_cache
      - run:
          <<: *npm_install
      - save_cache:
          name: Save Cache
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ~/.cache
            - ./node_modules
  format_and_test:
    <<: *defaults
    steps:
      - checkout
      - run: |
          if [ "$CIRCLE_BRANCH" = "master" ]; then
              circleci-agent step halt
          fi
      - restore_cache:
          <<: *deploy_cache
      - restore_cache:
          <<: *npm_cache
      - run:
          name: Format Code
          command: npm run format:check --base=${CIRCLE_BRANCH} --parallel
      - run:
          name: Lint Code
          command: npm run affected:lint --base=${CIRCLE_BRANCH} --parallel
      - run:
          name: Run Tests
          command: npm run affected:test --base=${CIRCLE_BRANCH} --code-coverage --parallel
  build_affected_apps:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          <<: *deploy_cache
      - restore_cache:
          <<: *npm_cache
      - run:
          name: Build Affected Apps
          command: npm run affected -- --target=deploy
      - run:
          name: List directory
          command: ls -lah
      - save_cache:
          key: build-{{ .Environment.CIRCLE_WORKFLOW_ID }}
          paths:
            - dist
      # - store_artifacts:
      #     path: dist
      - persist_to_workspace:
          root: .
          paths:
            - dist
